#ifndef FreeSerif8pt7b_H
#define FreeSerif8pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeSerif8pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xE8, 0x0C, 0xDE, 0xF7, 0x20, 0x12, 0x12, 0x22, 0x24, 0xFF,
  0x24, 0x24, 0xFE, 0x24, 0x44, 0x48, 0x10, 0xF3, 0x56, 0xAD, 0x0E, 0x0E,
  0x0F, 0x17, 0x2F, 0x5B, 0xE1, 0x00, 0x38, 0x86, 0x78, 0xE5, 0x0C, 0x50,
  0xC6, 0x0C, 0xCE, 0x75, 0x90, 0xB1, 0x0B, 0x11, 0x32, 0x11, 0xC0, 0x1C,
  0x06, 0x40, 0xC8, 0x19, 0x03, 0xDE, 0x31, 0x1A, 0x26, 0x68, 0xC6, 0x18,
  0xE1, 0xE7, 0x80, 0xFE, 0x08, 0x88, 0x84, 0x63, 0x18, 0xC2, 0x10, 0x41,
  0x04, 0x82, 0x08, 0x21, 0x0C, 0x63, 0x18, 0x84, 0x44, 0x40, 0x61, 0x8A,
  0xDC, 0xFD, 0x86, 0x00, 0x10, 0x20, 0x47, 0xF1, 0x02, 0x04, 0x08, 0xD8,
  0xF0, 0xC0, 0x11, 0x22, 0x24, 0x44, 0x48, 0x80, 0x3C, 0x66, 0x42, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0x42, 0x66, 0x3C, 0x03, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0xF0, 0x3C, 0x4E, 0x86, 0x06, 0x06, 0x0C, 0x08, 0x10, 0x20,
  0x61, 0xFE, 0x79, 0x18, 0x30, 0x41, 0x8F, 0x83, 0x83, 0x06, 0x1B, 0xC0,
  0x04, 0x18, 0xF1, 0x64, 0xC9, 0xA3, 0x3F, 0x0C, 0x18, 0x30, 0x1E, 0x40,
  0xC1, 0xE0, 0xE0, 0xC1, 0x83, 0x04, 0x13, 0xC0, 0x0E, 0x30, 0xC3, 0x0E,
  0x1B, 0xBB, 0xE3, 0xC7, 0x8D, 0x91, 0xC0, 0xFE, 0x10, 0x42, 0x08, 0x21,
  0x04, 0x10, 0x82, 0x00, 0x3D, 0x8F, 0x1E, 0x36, 0x83, 0x1B, 0x63, 0xC7,
  0xCD, 0xF0, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xE3, 0x7F, 0x06, 0x06, 0x0C,
  0x38, 0x60, 0xC0, 0x0C, 0xC0, 0x00, 0x19, 0x40, 0x01, 0x87, 0x0E, 0x1C,
  0x06, 0x00, 0xE0, 0x1C, 0x03, 0xFF, 0x80, 0x00, 0x1F, 0xF0, 0xC0, 0x38,
  0x07, 0x00, 0x60, 0x38, 0x70, 0xE1, 0x80, 0x7A, 0x38, 0xC3, 0x0C, 0x21,
  0x04, 0x10, 0x03, 0x00, 0x0F, 0x83, 0x86, 0x60, 0x26, 0x35, 0xC6, 0x9C,
  0xC9, 0xCC, 0x9C, 0xCA, 0x67, 0xE3, 0x80, 0x0F, 0xC0, 0x04, 0x00, 0xC0,
  0x38, 0x05, 0x01, 0x30, 0x22, 0x04, 0x61, 0xFC, 0x20, 0xC8, 0x1B, 0x87,
  0x80, 0xFF, 0x0C, 0x73, 0x0C, 0xC3, 0x31, 0x8F, 0xC3, 0x18, 0xC3, 0x30,
  0xCC, 0x7F, 0xF0, 0x1F, 0x4C, 0x76, 0x0F, 0x01, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0x60, 0x1C, 0x31, 0xF0, 0xFE, 0x18, 0xC6, 0x19, 0x83, 0x60, 0xD8,
  0x36, 0x0D, 0x83, 0x61, 0x98, 0xCF, 0xE0, 0xFF, 0x30, 0x98, 0x0C, 0x06,
  0x23, 0xF1, 0x88, 0xC0, 0x60, 0x30, 0x7F, 0xE0, 0xFF, 0x61, 0x60, 0x60,
  0x62, 0x7E, 0x62, 0x60, 0x60, 0x60, 0xF0, 0x1E, 0x46, 0x39, 0x81, 0x60,
  0x0C, 0x01, 0x83, 0xF0, 0x36, 0x06, 0x60, 0xCE, 0x18, 0x7C, 0x00, 0xF3,
  0xD8, 0x66, 0x19, 0x86, 0x61, 0x9F, 0xE6, 0x19, 0x86, 0x61, 0x98, 0x6F,
  0x3C, 0xF6, 0x66, 0x66, 0x66, 0x66, 0xF0, 0x3C, 0x61, 0x86, 0x18, 0x61,
  0x86, 0x18, 0x6F, 0x00, 0xF3, 0xCC, 0x31, 0x88, 0x32, 0x06, 0x80, 0xF0,
  0x1B, 0x03, 0x30, 0x63, 0x8C, 0x3B, 0xCF, 0x80, 0xF0, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0xB0, 0xBF, 0xC0, 0xF0, 0x1C, 0xE0,
  0xE3, 0x83, 0x8A, 0x16, 0x2C, 0x58, 0xB2, 0x62, 0x69, 0x89, 0xA6, 0x23,
  0x18, 0x8C, 0x67, 0x23, 0xC0, 0xE1, 0xDC, 0x27, 0x09, 0x62, 0x4C, 0x93,
  0x24, 0x69, 0x0E, 0x41, 0x90, 0x6E, 0x08, 0x1E, 0x18, 0x66, 0x1B, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x61, 0x98, 0x61, 0xE0, 0xFC, 0x66, 0x63,
  0x63, 0x63, 0x66, 0x7C, 0x60, 0x60, 0x60, 0xF0, 0x1E, 0x08, 0x46, 0x1B,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x61, 0x88, 0x41, 0xE0, 0x38, 0x03,
  0x00, 0x70, 0xFE, 0x19, 0xC6, 0x31, 0x8C, 0x67, 0x1F, 0x06, 0xC1, 0x98,
  0x67, 0x18, 0xCF, 0x1C, 0x75, 0x9B, 0x16, 0x07, 0x07, 0x03, 0x03, 0x87,
  0x8E, 0xF0, 0xFF, 0xE3, 0x10, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x01, 0xE0, 0xF1, 0xD8, 0x26, 0x09, 0x82, 0x60, 0x98, 0x26,
  0x09, 0x82, 0x60, 0x8C, 0x41, 0xE0, 0xF0, 0xEC, 0x08, 0xC1, 0x18, 0x41,
  0x08, 0x32, 0x02, 0x40, 0x70, 0x06, 0x00, 0xC0, 0x10, 0x00, 0xF7, 0x8E,
  0xC6, 0x08, 0x84, 0x21, 0x8C, 0x43, 0x18, 0x83, 0x5A, 0x06, 0xB4, 0x06,
  0x28, 0x0C, 0x60, 0x18, 0x40, 0x20, 0x80, 0xF9, 0xE6, 0x18, 0x62, 0x0C,
  0x80, 0xE0, 0x0C, 0x02, 0xC0, 0x98, 0x21, 0x8C, 0x1B, 0xC7, 0x80, 0xF8,
  0xF7, 0x04, 0x30, 0x81, 0x88, 0x0D, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06,
  0x00, 0x60, 0x0F, 0x00, 0x3F, 0x90, 0x40, 0x30, 0x18, 0x06, 0x03, 0x01,
  0x80, 0x60, 0x30, 0x58, 0x2F, 0xF8, 0xFB, 0x6D, 0xB6, 0xDB, 0x6D, 0xC0,
  0x88, 0x44, 0x44, 0x22, 0x21, 0x10, 0xED, 0xB6, 0xDB, 0x6D, 0xB7, 0xC0,
  0x10, 0x30, 0xA1, 0x24, 0x48, 0x40, 0xFF, 0x88, 0x80, 0x73, 0x61, 0x8E,
  0xDB, 0x67, 0xC0, 0x20, 0xE0, 0x60, 0x60, 0x60, 0x6E, 0x77, 0x63, 0x63,
  0x63, 0x66, 0x3C, 0x3C, 0xCF, 0x06, 0x0C, 0x1C, 0x4F, 0x00, 0x02, 0x0E,
  0x06, 0x06, 0x06, 0x3E, 0x66, 0xC6, 0xC6, 0xC6, 0xE6, 0x7E, 0x3C, 0x8F,
  0xFE, 0x0C, 0x0C, 0x4F, 0x00, 0x1C, 0x86, 0x18, 0xF1, 0x86, 0x18, 0x61,
  0x8F, 0x00, 0x3C, 0x33, 0xD9, 0x8C, 0xC1, 0xC3, 0x01, 0xF8, 0x82, 0xC1,
  0x61, 0x1F, 0x00, 0x20, 0xE0, 0x60, 0x60, 0x60, 0x6C, 0x76, 0x66, 0x66,
  0x66, 0x66, 0xFF, 0x60, 0x02, 0xE6, 0x66, 0x6F, 0x18, 0x00, 0x33, 0x8C,
  0x63, 0x18, 0xC6, 0x31, 0x70, 0x20, 0xE0, 0x60, 0x60, 0x60, 0x67, 0x64,
  0x68, 0x78, 0x6C, 0x66, 0xF7, 0x2E, 0x66, 0x66, 0x66, 0x66, 0x6F, 0xEE,
  0xE3, 0x99, 0x98, 0xCC, 0xC6, 0x66, 0x33, 0x31, 0x9B, 0xDF, 0xE0, 0xEC,
  0x76, 0x66, 0x66, 0x66, 0x66, 0xFF, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0x66,
  0x3C, 0xEE, 0x77, 0x63, 0x63, 0x63, 0x66, 0x7C, 0x60, 0x60, 0x60, 0xF0,
  0x3A, 0x66, 0xC6, 0xC6, 0xC6, 0xE6, 0x7E, 0x06, 0x06, 0x06, 0x0F, 0x6D,
  0xC6, 0x18, 0x61, 0x8F, 0x00, 0x6C, 0xE0, 0xE9, 0xCF, 0xC0, 0x27, 0x98,
  0xC6, 0x31, 0x8F, 0xEE, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3F, 0xE6, 0x84,
  0x91, 0x21, 0x83, 0x04, 0x00, 0xEE, 0x68, 0x89, 0x99, 0x13, 0x43, 0xB8,
  0x22, 0x04, 0x40, 0xFE, 0x64, 0x38, 0x18, 0x2C, 0x44, 0xCF, 0xE6, 0x85,
  0x91, 0x23, 0x43, 0x06, 0x08, 0x10, 0x23, 0x80, 0x7C, 0x98, 0x20, 0x83,
  0x0C, 0x7F, 0x00, 0x36, 0x66, 0x66, 0x6C, 0x66, 0x66, 0x66, 0x30, 0xFF,
  0xE0, 0xC6, 0x66, 0x66, 0x63, 0x66, 0x66, 0x66, 0xC0, 0x70, 0x0E };

const GFXglyph FreeSerif8pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   4,    0,    0 },   // 0x20 ' '
  {     1,   2,  11,   5,    2,  -10 },   // 0x21 '!'
  {     4,   5,   4,   6,    1,  -10 },   // 0x22 '"'
  {     7,   8,  11,   8,    0,  -10 },   // 0x23 '#'
  {    18,   7,  13,   8,    1,  -11 },   // 0x24 '$'
  {    30,  12,  11,  13,    1,  -10 },   // 0x25 '%'
  {    47,  11,  11,  12,    1,  -10 },   // 0x26 '&'
  {    63,   2,   4,   3,    1,  -10 },   // 0x27 '''
  {    64,   5,  14,   5,    1,  -10 },   // 0x28 '('
  {    73,   5,  14,   5,   -1,  -10 },   // 0x29 ')'
  {    82,   6,   7,   8,    2,  -10 },   // 0x2A '*'
  {    88,   7,   8,   9,    1,   -7 },   // 0x2B '+'
  {    95,   2,   3,   4,    2,    0 },   // 0x2C ','
  {    96,   4,   1,   5,    1,   -3 },   // 0x2D '-'
  {    97,   2,   1,   4,    1,    0 },   // 0x2E '.'
  {    98,   4,  11,   5,    0,  -10 },   // 0x2F '/'
  {   104,   8,  11,   8,    0,  -10 },   // 0x30 '0'
  {   115,   5,  12,   8,    1,  -11 },   // 0x31 '1'
  {   123,   8,  11,   8,    1,  -10 },   // 0x32 '2'
  {   134,   7,  11,   8,    1,  -10 },   // 0x33 '3'
  {   144,   7,  11,   8,    1,  -10 },   // 0x34 '4'
  {   154,   7,  11,   8,    1,  -10 },   // 0x35 '5'
  {   164,   7,  12,   8,    1,  -11 },   // 0x36 '6'
  {   175,   6,  11,   8,    1,  -10 },   // 0x37 '7'
  {   184,   7,  11,   8,    1,  -10 },   // 0x38 '8'
  {   194,   8,  12,   8,    0,  -10 },   // 0x39 '9'
  {   206,   2,   7,   4,    1,   -6 },   // 0x3A ':'
  {   208,   3,   9,   4,    1,   -6 },   // 0x3B ';'
  {   212,   9,   8,   9,    0,   -7 },   // 0x3C '<'
  {   221,   9,   4,   9,    0,   -5 },   // 0x3D '='
  {   226,   9,   8,   9,    0,   -7 },   // 0x3E '>'
  {   235,   6,  11,   7,    1,  -10 },   // 0x3F '?'
  {   244,  12,  11,  14,    1,  -10 },   // 0x40 '@'
  {   261,  11,  11,  12,    0,  -10 },   // 0x41 'A'
  {   277,  10,  11,  10,    0,  -10 },   // 0x42 'B'
  {   291,  10,  11,  11,    1,  -10 },   // 0x43 'C'
  {   305,  10,  11,  12,    1,  -10 },   // 0x44 'D'
  {   319,   9,  11,  10,    1,  -10 },   // 0x45 'E'
  {   332,   8,  11,   9,    1,  -10 },   // 0x46 'F'
  {   343,  11,  11,  12,    1,  -10 },   // 0x47 'G'
  {   359,  10,  11,  11,    1,  -10 },   // 0x48 'H'
  {   373,   4,  11,   5,    1,  -10 },   // 0x49 'I'
  {   379,   6,  11,   6,    0,  -10 },   // 0x4A 'J'
  {   388,  11,  11,  11,    1,  -10 },   // 0x4B 'K'
  {   404,   9,  11,  10,    1,  -10 },   // 0x4C 'L'
  {   417,  14,  11,  14,    0,  -10 },   // 0x4D 'M'
  {   437,  10,  11,  12,    1,  -10 },   // 0x4E 'N'
  {   451,  10,  11,  12,    1,  -10 },   // 0x4F 'O'
  {   465,   8,  11,   9,    1,  -10 },   // 0x50 'P'
  {   476,  10,  14,  12,    1,  -10 },   // 0x51 'Q'
  {   494,  10,  11,  11,    1,  -10 },   // 0x52 'R'
  {   508,   7,  11,   8,    1,  -10 },   // 0x53 'S'
  {   518,  10,  11,  10,    0,  -10 },   // 0x54 'T'
  {   532,  10,  11,  12,    1,  -10 },   // 0x55 'U'
  {   546,  11,  11,  11,    0,  -10 },   // 0x56 'V'
  {   562,  15,  11,  15,    0,  -10 },   // 0x57 'W'
  {   583,  11,  11,  11,    0,  -10 },   // 0x58 'X'
  {   599,  12,  11,  11,    0,  -10 },   // 0x59 'Y'
  {   616,  10,  11,  10,    0,  -10 },   // 0x5A 'Z'
  {   630,   3,  14,   5,    1,  -10 },   // 0x5B '['
  {   636,   4,  11,   5,    0,  -10 },   // 0x5C '\'
  {   642,   3,  14,   5,    1,  -10 },   // 0x5D ']'
  {   648,   7,   6,   7,    0,  -10 },   // 0x5E '^'
  {   654,   8,   1,   8,    0,    2 },   // 0x5F '_'
  {   655,   3,   3,   4,    0,  -10 },   // 0x60 '`'
  {   657,   6,   7,   7,    1,   -6 },   // 0x61 'a'
  {   663,   8,  12,   8,    0,  -11 },   // 0x62 'b'
  {   675,   7,   7,   7,    0,   -6 },   // 0x63 'c'
  {   682,   8,  12,   8,    0,  -11 },   // 0x64 'd'
  {   694,   7,   7,   7,    0,   -6 },   // 0x65 'e'
  {   701,   6,  11,   6,    0,  -10 },   // 0x66 'f'
  {   710,   9,  11,   7,    0,   -6 },   // 0x67 'g'
  {   723,   8,  12,   8,    0,  -11 },   // 0x68 'h'
  {   735,   4,  10,   4,    1,   -9 },   // 0x69 'i'
  {   740,   5,  14,   6,    0,   -9 },   // 0x6A 'j'
  {   749,   8,  12,   8,    0,  -11 },   // 0x6B 'k'
  {   761,   4,  12,   4,    0,  -11 },   // 0x6C 'l'
  {   767,  13,   7,  12,    0,   -6 },   // 0x6D 'm'
  {   779,   8,   7,   8,    0,   -6 },   // 0x6E 'n'
  {   786,   8,   7,   8,    0,   -6 },   // 0x6F 'o'
  {   793,   8,  11,   8,    0,   -6 },   // 0x70 'p'
  {   804,   8,  11,   8,    0,   -6 },   // 0x71 'q'
  {   815,   6,   7,   6,    0,   -6 },   // 0x72 'r'
  {   821,   5,   7,   6,    1,   -6 },   // 0x73 's'
  {   826,   5,   8,   5,    0,   -7 },   // 0x74 't'
  {   831,   8,   7,   8,    0,   -6 },   // 0x75 'u'
  {   838,   7,   7,   7,    0,   -6 },   // 0x76 'v'
  {   845,  11,   7,  11,    0,   -6 },   // 0x77 'w'
  {   855,   8,   7,   8,    0,   -6 },   // 0x78 'x'
  {   862,   7,  11,   8,    0,   -6 },   // 0x79 'y'
  {   872,   7,   7,   7,    0,   -6 },   // 0x7A 'z'
  {   879,   4,  15,   8,    2,  -11 },   // 0x7B '{'
  {   887,   1,  11,   3,    1,  -10 },   // 0x7C '|'
  {   889,   4,  15,   8,    2,  -10 },   // 0x7D '}'
  {   897,   8,   2,   8,    0,   -4 } }; // 0x7E '~'

const GFXfont FreeSerif8pt7b PROGMEM = {
  (uint8_t  *)FreeSerif8pt7bBitmaps,
  (GFXglyph *)FreeSerif8pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1571 bytes

#endif // FreeSerif8pt7b_H