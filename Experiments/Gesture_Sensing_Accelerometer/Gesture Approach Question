November 23, 2023, fcohen@starlingwatch.com

I'm working on gesture detection with a 3-axis accelerometer. First part is to detect when the sensor is being moved. Then sense what the movement means. Here's my code so far. What do you think of the approach? -Frank

// Auto-detect start of gesture

#define tollerance 1.10
#define windowtime 1000
#define scaler 200
#define scalemax 1000
#define scalemin -1000

unsigned long movetimer;
bool firsttime = true;
int movecount = 1;

float nx0 = 1, nx1 = 1, nx2 = 1, nx3 = 1, nx4 = 1;
float ny0 = 1, ny1 = 1, ny2 = 1, ny3 = 1, ny4 = 1;
float nz0 = 1, nz1 = 1, nz2 = 1, nz3 = 1, nz4 = 1;
float nx, ny, nz;

bool getAccelValues()
{
  nx = LIS.getAccelerationX() * scaler ;
  ny = LIS.getAccelerationY() * scaler ;
  nz = LIS.getAccelerationZ() * scaler ;

  if ( 
    ( ( nx > scalemax ) || ( nx < scalemin ) ) ||
    ( ( ny > scalemax ) || ( ny < scalemin ) ) ||
    ( ( nz > scalemax ) || ( nz < scalemin ) )
  )
  {
    Serial.print( "ignoring " );
    Serial.print( "\tX = ");
    Serial.println( nx );
    Serial.print( "\tY = ");
    Serial.println( ny );
    Serial.print( "\tZ = ");
    Serial.println( nz );

    return false;
  }

  return true;
}

void detectStartOfGesture()
{
  if ( ( ( millis() - movetimer ) > windowtime ) || ( firsttime ) )
  {
    movetimer = millis();
    firsttime = false;

    if ( ! getAccelValues() )
    {
      firsttime = true;
      return;
    }

    nx0 = nx;
    ny0 = ny;
    nz0 = nz;

    return;
  }

  if ( ! getAccelValues() ) return;
  
  nx1 = nx2;
  nx2 = nx3;
  nx3 = nx;
  nx4 =  ( nx1 + nx2 + nx3 ) / 3 ;

  ny1 = ny2;
  ny2 = ny3;
  ny3 = ny;
  ny4 =  ( ny1 + ny2 + ny3 ) / 3 ;

  nz1 = nz2;
  nz2 = nz3;
  nz3 = nz;
  nz4 =  ( nz1 + nz2 + nz3 ) / 3 ;

  movecount++;

  bool popx = false, popy = false, popz = false;

  float meow = nx0 + ( nx0 * ( tollerance / 2 ) );
  float wolf = nx0 - ( nx0 * ( tollerance / 2 ) );

  if ( nx4 > 0 )
  {
    if ( ! ( ( nx4 < meow ) && ( nx4 > wolf ) ) ) popx = true;
  }
  else
  {
    if ( ! ( ( nx4 < wolf ) && ( nx4 > meow ) ) ) popx = true;
  }

  meow = ny0 + ( ny0 * ( tollerance / 2 ) );
  wolf = ny0 - ( ny0 * ( tollerance / 2 ) );

  if ( ny4 > 0 )
  {
    if ( ! ( ( ny4 < meow ) && ( ny4 > wolf ) ) ) popy = true;
  }
  else
  {
    if ( ! ( ( ny4 < wolf ) && ( ny4 > meow ) ) ) popy = true;
  }

  meow = nz0 + ( nz0 * ( tollerance / 2 ) );
  wolf = nz0 - ( nz0 * ( tollerance / 2 ) );

  if ( nz4 > 0 )
  {
    if ( ! ( ( nz4 < meow ) && ( nz4 > wolf ) ) ) popz = true;
  }
  else
  {
    if ( ! ( ( nz4 < wolf ) && ( nz4 > meow ) ) ) popz = true;
  }

  if ( popx || popy || popz )
  {
    firsttime = true;

    Serial.print( "sensor moving " );
    Serial.print( movecount );
    Serial.print( "\tx = " );
    Serial.print( popx );
    Serial.print( "\ty = " );
    Serial.print( popy );
    Serial.print( "\tz = " );
    Serial.println( popz );
  }
}
